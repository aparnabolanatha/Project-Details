/ * Heart Rate * / 

#include <Wire.h>
#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include "MAX30100_PulseOximeter.h"

const char* ssid = "SSID";
const char* password = "PASSWORD";

ESP8266WebServer server(80);
PulseOximeter pox;

uint32_t tsLastReport = 0;

void setup() {
  Serial.begin(115200);
  Wire.begin(D2, D1);  // SDA, SCL
  
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) 
  {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected! IP: " + WiFi.localIP().toString());

  
  if (!pox.begin())
   {
    Serial.println("MAX30100 init failed");
    while (1);
  }

  pox.setIRLedCurrent(MAX30100_LED_CURR_7_6MA);

  server.on("/", []() 
  {
    String html = "<html><head><meta http-equiv='refresh' content='1'></head><body>";
    html += "<h1>Heart Rate & SpO2 Monitor</h1>";
    html += "<p>Heart Rate: " + String(pox.getHeartRate()) + " bpm</p>";
    html += "<p>SpO2: " + String(pox.getSpO2()) + " %</p>";
    html += "</body></html>";
    server.send(200, "text/html", html);
  });

  server.begin();
  Serial.println("Web server started");
}

void loop() 
{
  pox.update();
  server.handleClient();

  
  if (millis() - tsLastReport > 1000) {
    Serial.print("Heart Rate: ");
    Serial.print(pox.getHeartRate());
    Serial.print(" bpm | SpO2: ");
    Serial.print(pox.getSpO2());
    Serial.println(" %");
    tsLastReport = millis();
  }
}
